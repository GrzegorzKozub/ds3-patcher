#!/usr/bin/env python3

import argparse
import os  # needed for rmtree
import re
import subprocess
import sys
from pathlib import Path
from shutil import rmtree

if __name__ == "__main__":

    parser = argparse.ArgumentParser()
    parser.add_argument("-s", "--skip-intro", action="store_true", help="skip intro logos")
    parser.add_argument("--all", action="store_true", help="enable all options")
    patches = parser.parse_args(sys.argv[1:sys.argv.index("--")])

    game_dir = Path(".")

    with open(game_dir / "darksoulsiii.exe", "rb") as f:
        exe_hex = f.read().hex()

    if patches.skip_intro or patches.all:
        pattern = "e8 1c ba fb".replace(" ", "")
        if (res := re.search(pattern, exe_hex)) is not None:
            addr = res.span()[0]
            patch = "48 31 c0 48 89 02 49 89 04 24 90 90 90 90 90 90 90 90 90 90".replace(" ", "")
            exe_hex = exe_hex[:addr] + patch + exe_hex[addr + len(patch):]
        else:
            print("skip-intro pattern scan failed")

    game_dir_patched = Path("ds3-patcher-tmp")

    if not game_dir_patched.is_dir():
        game_dir_patched.mkdir()

    game_dirs = [d for d in game_dir.rglob("*") if d.is_dir()]
    for d in game_dirs:
        if d == game_dir_patched:
            continue
        if not (game_dir_patched / d).is_dir():
            (game_dir_patched / d).mkdir(parents=True)

    game_files = [f for f in game_dir.rglob("*") if f.is_file()]
    for f in game_files:
        if f.name in ["darksoulsiii.exe", "ds3-patcher"]:
            continue
        if not (game_dir_patched / f).is_file():
            f.link_to(game_dir_patched / f)

    with open(game_dir_patched / "darksoulsiii.exe", "wb") as f:
        f.write(bytes.fromhex(exe_hex))

    del exe_hex

    steam_cmd = sys.argv[1 + sys.argv.index("--"):]
    steam_cmd[-1] = Path(steam_cmd[-1]).parent.absolute() / game_dir_patched / "darksoulsiii.exe"
    subprocess.run(steam_cmd, cwd=steam_cmd[-1].parent.absolute())

    rmtree(game_dir_patched)
